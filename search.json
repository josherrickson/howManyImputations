[{"path":"http://errickson.net/howManyImputations/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 howManyImputations authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"http://errickson.net/howManyImputations/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Josh Errickson. Author, maintainer.","code":""},{"path":"http://errickson.net/howManyImputations/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"von Hippel, Paul T. \"Many Imputations Need? Two-stage Calculation Using Quadratic Rule.\" Sociological Methods & Research. 2020;49(3):699-718. doi:10.1177/0049124117747303","code":"@Article{,   title = {How Many Imputations Do You Need? A Two-stage Calculation Using a Quadratic Rule.},   author = {Paul T {von Hippel}},   journal = {Sociological Methods & Research},   year = {2020},   volume = {49},   number = {33},   pages = {699--718},   url = {https://journals.sagepub.com/doi/full/10.1177/0049124117747303}, }"},{"path":"http://errickson.net/howManyImputations/index.html","id":"howmanyimputations-","dir":"","previous_headings":"","what":"Calculate How many Imputations are Needed for Multiple Imputation","title":"Calculate How many Imputations are Needed for Multiple Imputation","text":"Package website: release | development howManyImputations implements “how_many_imputations” von Hippel (2020). See https://missingdata.org/. carrying multiple imputation, old advice 5-10 imputations sufficient point estimate (e.g. estimated coefficient), estimates standard errors (consequently, hypothesis tests confidence intervals). von Hippel (2020) provides way calculate number imputations needed consistent estimates standard error. requires estimate Fraction Missing Information (FMI) can obtained running number imputations. Therefore, following procedure recommended: Carry limited number imputations enable estimation FMI. von Hippel (2020) recommends 20 imputations. Use function how_many_imputations() calculate many total imputations need. number total imputations need larger initial batch 20, run additional imputations.","code":""},{"path":"http://errickson.net/howManyImputations/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Calculate How many Imputations are Needed for Multiple Imputation","text":"function howManyImputations how_many_imputations(). takes results model fit multiply imputed data (primarily mice see working MI packages) estimates many total imputations needed. optional cv alpha arguments can used tweaked control conservative anti-conversative estimate . See documentation details. ’s worked example: ’re using different package carry imputation, said package produces list models output modeling step, how_many_imputations() tries convert object mira object via mice::.mira() . ’s example reworked using jomo package imputation (using mitools convert output jomo::jomo1() list via mitools::imputationList()).","code":"library(mice) imputed_data <- mice(data_with_missing, ...) mi_model_fit <- with(imputed_data, lm(y ~ x)) how_many_imputations(mi_model_fit) how_many_imputations(mi_model_fit, cv = .1, alpha = .01) > library(howManyImputations) > data(airquality) > # Add some missingness > airquality[4:10, 3] <- rep(NA, 7) > airquality[1:5, 4] <- NA > airquality <- airquality[-c(5, 6)] > impdata1 <- mice(airquality, m = 5, maxit = 10, method = 'pmm', seed = 500) > modelFit1 <- with(impdata1, lm(Temp ~ Ozone + Solar.R + Wind)) > how_many_imputations(modelFit1) [1] 72 > how_many_imputations(modelFit1, cv = .01) [1] 1767 > library(jomo) > library(mitools) # for the `imputationList` function > jomodata <- jomo1(airquality, nburn = 100, nbetween = 100, nimp = 5) > impdata2 <- imputationList(split(jomodata, jomodata$Imputation)) > modelfit2 <- with(impdata2, lm(Temp ~ Ozone + Solar.R + Wind)) > how_many_imputations(modelfit2) [1] 77"},{"path":"http://errickson.net/howManyImputations/index.html","id":"reference","dir":"","previous_headings":"","what":"Reference","title":"Calculate How many Imputations are Needed for Multiple Imputation","text":"Von Hippel, Paul T. “many imputations need? two-stage calculation using quadratic rule.” Sociological Methods & Research. 2020;49(3):699-718. doi:10.1177/0049124117747303","code":""},{"path":"http://errickson.net/howManyImputations/reference/howManyImputations.html","id":null,"dir":"Reference","previous_headings":"","what":"Improper function name, use how_many_imputations() instead — howManyImputations","title":"Improper function name, use how_many_imputations() instead — howManyImputations","text":"Improper function name, use how_many_imputations() instead","code":""},{"path":"http://errickson.net/howManyImputations/reference/howManyImputations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Improper function name, use how_many_imputations() instead — howManyImputations","text":"","code":"howManyImputations(model, cv = 0.05, alpha = 0.05)"},{"path":"http://errickson.net/howManyImputations/reference/howManyImputations.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Improper function name, use how_many_imputations() instead — howManyImputations","text":"model See how_many_imputations() cv See how_many_imputations() alpha See how_many_imputations()","code":""},{"path":"http://errickson.net/howManyImputations/reference/howManyImputations.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Improper function name, use how_many_imputations() instead — howManyImputations","text":"See how_many_imputations()","code":""},{"path":"http://errickson.net/howManyImputations/reference/how_many_imputations.html","id":null,"dir":"Reference","previous_headings":"","what":"Implements two-stage ","title":"Implements two-stage ","text":"old advice 5-10 imputations sufficient point estimate (e.g. estimated coefficient), estimates standard errors (consequently, hypothesis tests confidence intervals).","code":""},{"path":"http://errickson.net/howManyImputations/reference/how_many_imputations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Implements two-stage ","text":"","code":"how_many_imputations(model, cv = 0.05, alpha = 0.05)"},{"path":"http://errickson.net/howManyImputations/reference/how_many_imputations.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Implements two-stage ","text":"model Either mira object (created running model data set imputed using mice::mice()) mipo object (creating running pool() mira object), object can converted mira via .mira(). cv Desired precision standard errors. Default .05. data re-imputed, estimated standard errors differ amount. alpha Significance level choice \"conservative\" FMI.","code":""},{"path":"http://errickson.net/howManyImputations/reference/how_many_imputations.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Implements two-stage ","text":"number required imputations obtain cv level   precision.","code":""},{"path":"http://errickson.net/howManyImputations/reference/how_many_imputations.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Implements two-stage ","text":"von Hippel (2020) provides way calculate number imputations needed consistent estimates standard error. requires estimate Fraction Missing Information (FMI) can obtained running number imputations. Therefore, von Hippel (2020) recommends following procedure: Carry limited number imputations enable estimation   FMI. von Hippel (2020) recommends 20 imputations. Use function, how_many_imputations(), calculate many   total imputations need. number total imputations need larger   initial batch 20, run additional imputations.","code":""},{"path":"http://errickson.net/howManyImputations/reference/how_many_imputations.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Implements two-stage ","text":"von Hippel, Paul T. \"Many Imputations Need? Two-stage Calculation Using Quadratic Rule.\" Sociological Methods & Research 49.3 (2020): 699-718.","code":""},{"path":"http://errickson.net/howManyImputations/reference/how_many_imputations.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Implements two-stage ","text":"","code":"data(airquality) # Add some missingness airquality[4:10, 3] <- rep(NA, 7) airquality[1:5, 4] <- NA airquality <- airquality[-c(5, 6)] impdata1 <- mice::mice(airquality, m = 5, maxit = 10, method = 'pmm', seed = 500) #>  #>  iter imp variable #>   1   1  Ozone  Solar.R  Wind  Temp #>   1   2  Ozone  Solar.R  Wind  Temp #>   1   3  Ozone  Solar.R  Wind  Temp #>   1   4  Ozone  Solar.R  Wind  Temp #>   1   5  Ozone  Solar.R  Wind  Temp #>   2   1  Ozone  Solar.R  Wind  Temp #>   2   2  Ozone  Solar.R  Wind  Temp #>   2   3  Ozone  Solar.R  Wind  Temp #>   2   4  Ozone  Solar.R  Wind  Temp #>   2   5  Ozone  Solar.R  Wind  Temp #>   3   1  Ozone  Solar.R  Wind  Temp #>   3   2  Ozone  Solar.R  Wind  Temp #>   3   3  Ozone  Solar.R  Wind  Temp #>   3   4  Ozone  Solar.R  Wind  Temp #>   3   5  Ozone  Solar.R  Wind  Temp #>   4   1  Ozone  Solar.R  Wind  Temp #>   4   2  Ozone  Solar.R  Wind  Temp #>   4   3  Ozone  Solar.R  Wind  Temp #>   4   4  Ozone  Solar.R  Wind  Temp #>   4   5  Ozone  Solar.R  Wind  Temp #>   5   1  Ozone  Solar.R  Wind  Temp #>   5   2  Ozone  Solar.R  Wind  Temp #>   5   3  Ozone  Solar.R  Wind  Temp #>   5   4  Ozone  Solar.R  Wind  Temp #>   5   5  Ozone  Solar.R  Wind  Temp #>   6   1  Ozone  Solar.R  Wind  Temp #>   6   2  Ozone  Solar.R  Wind  Temp #>   6   3  Ozone  Solar.R  Wind  Temp #>   6   4  Ozone  Solar.R  Wind  Temp #>   6   5  Ozone  Solar.R  Wind  Temp #>   7   1  Ozone  Solar.R  Wind  Temp #>   7   2  Ozone  Solar.R  Wind  Temp #>   7   3  Ozone  Solar.R  Wind  Temp #>   7   4  Ozone  Solar.R  Wind  Temp #>   7   5  Ozone  Solar.R  Wind  Temp #>   8   1  Ozone  Solar.R  Wind  Temp #>   8   2  Ozone  Solar.R  Wind  Temp #>   8   3  Ozone  Solar.R  Wind  Temp #>   8   4  Ozone  Solar.R  Wind  Temp #>   8   5  Ozone  Solar.R  Wind  Temp #>   9   1  Ozone  Solar.R  Wind  Temp #>   9   2  Ozone  Solar.R  Wind  Temp #>   9   3  Ozone  Solar.R  Wind  Temp #>   9   4  Ozone  Solar.R  Wind  Temp #>   9   5  Ozone  Solar.R  Wind  Temp #>   10   1  Ozone  Solar.R  Wind  Temp #>   10   2  Ozone  Solar.R  Wind  Temp #>   10   3  Ozone  Solar.R  Wind  Temp #>   10   4  Ozone  Solar.R  Wind  Temp #>   10   5  Ozone  Solar.R  Wind  Temp modelFit1 <- with(impdata1, lm(Temp ~ Ozone + Solar.R + Wind)) how_many_imputations(modelFit1) #> [1] 57 how_many_imputations(modelFit1, cv = .01) #> [1] 1394  # Using a non-`mice` library. library(jomo) library(mitools) # for the `imputationList` function jomodata <- jomo::jomo1(airquality, nburn = 100, nbetween = 100, nimp = 5) #> Found  4 continuous outcomes and no categorical. Using function jomo1con.  #> ..........First imputation registered.  #> ..........Imputation number  2 registered  #> ..........Imputation number  3 registered  #> ..........Imputation number  4 registered  #> ..........Imputation number  5 registered  #> The posterior mean of the fixed effects estimates is: #>                 X1 #> Ozone    42.093364 #> Solar.R 185.364121 #> Wind      9.866024 #> Temp     78.221961 #>  #> The posterior covariance matrix is: #>              Ozone      Solar.R        Wind      Temp #> Ozone   1099.42722  973.7760494 -65.5499207 211.45136 #> Solar.R  973.77605 8439.0112912   0.3907474 246.44545 #> Wind     -65.54992    0.3907474  12.2804579 -14.33819 #> Temp     211.45136  246.4454500 -14.3381912  88.44187 impdata2 <- mitools::imputationList(split(jomodata, jomodata$Imputation)) modelfit2 <- with(impdata2, lm(Temp ~ Ozone + Solar.R + Wind)) how_many_imputations(modelfit2) #> [1] 43"},{"path":"http://errickson.net/howManyImputations/news/index.html","id":"howmanyimputations-0229001","dir":"Changelog","previous_headings":"","what":"howManyImputations 0.2.2.9001","title":"howManyImputations 0.2.2.9001","text":"package just thin wrapper around von Hippel (2020)’s work, added citation paper rather package. Added function howManyImputations() warning direct users proper how_many_imputations(). Fixes documentation.","code":""},{"path":"http://errickson.net/howManyImputations/news/index.html","id":"howmanyimputations-022","dir":"Changelog","previous_headings":"","what":"howManyImputations 0.2.2","title":"howManyImputations 0.2.2","text":"CRAN release: 2022-04-06 First release CRAN.","code":""}]
